---
title: "PCA Analysis"
format: html
editor: visual
---


# Data importation and exploration
```{r}
#Loading necessary packages

library(tidyverse)
library(here)
library(readr)
```

```{r}
#Importing data set

data <- read.csv("ahds.csv",stringsAsFactors = TRUE )
```

```{r}
glimpse(data)
```

```{r}
head(data)
```

```{r}
#Shape of data

summary(data)
```

```{r}
library(skimr)

skim(data)
```

```{r}
library(gtsummary)

data %>% 
    select(PID, Order) %>% 
    skim()
```

# Splitting the data into training and testing sets

```{r}
library(rsample)
set.seed(123)

split <- initial_split(data, prop = 0.7, 
                       strata = "SalePrice")

data_train  <- training(split)
data_test   <- testing(split)


glimpse(data_train)
```




# Checking for distribution and outliers using histogram plots

```{r}

#Plotting the distribution of Saleprice
data_train %>% 
    ggplot(aes(x= SalePrice)) + geom_histogram(fill = "lightblue", colour = "white", bins=30)
```


```{r}
#Plotting distribution of Lot Area

data_train %>% 
    ggplot(aes(x= Lot.Area)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Lot size in square feet',
       x = 'Lot size',
    ) 

```

```{r}

#Plotting distribution of Basement Area

library(tidyverse)

data_train %>% 
    ggplot(aes(x= Total.Bsmt.SF)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Total square feet of Basement area before tranformation',
       x = 'Total square Feet',
    )
```

```{r}
#Plotting Distribution of Garage size

library(tidyverse)

data_train %>% 
    ggplot(aes(x= Garage.Area)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Size of Garage in square feet before transformation',
       x = 'Garage square Feet',
    )
```

# Creating a recipe to be used with feature and target engineering

```{r}
# Feature engineering packages
library(caret)    # for various ML tasks
library(recipes)  # for feature engineering tasks

data_recipe <- recipe(SalePrice ~ ., data = data_train)
summary(data_recipe)

```

# Updating Variable roles

```{r}
data_recipe <- data_recipe %>% 
               update_role(PID, new_role = "id variable")

summary(data_recipe)
```

```{r}
data_recipe <- data_recipe %>% 
               update_role(Order, new_role = "id variable")

summary(data_recipe)
```


# Outlier fix and plots

```{r}
#Normalizing Lot Area

data_recipe %>% 
    step_YeoJohnson(Lot.Area) %>% 
    prep() %>% 
    bake(new_data = data_train) %>% 

    ggplot(mapping = aes(x = Lot.Area)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Lot size in square feet after transformation',
       x = 'Lot size',
    ) 
  

```

```{r}

#Normalizing Garage area

data_recipe %>% 
    step_YeoJohnson(Garage.Area) %>% 
    prep() %>% 
    bake(new_data = data_train) %>% 

    ggplot(mapping = aes(x = Garage.Area)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Size of Garage in square feet after transformation',
       x = 'Garage square Feet',
    )
```

```{r}
#Normalizing Basement Area

data_recipe %>% 
    step_YeoJohnson(Total.Bsmt.SF) %>% 
    prep() %>% 
    bake(new_data = data_train) %>% 

    ggplot(mapping = aes(x = Total.Bsmt.SF)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Total square feet of Basement area after tranformation',
       x = 'Total square Feet',
    )
```


# Visualizing missing values

```{r}
#missing value summary

library(naniar)

data_train %>% 
    miss_var_summary()
```

```{r}

#Visualizing missingness
data_train %>% 
    is.na() %>%
    reshape2::melt() %>%
    ggplot(aes(Var2, Var1, fill=value)) + 
    geom_tile() + 
    coord_flip() +
    scale_y_continuous(NULL, expand = c(0, 0)) +
    scale_fill_grey(name = "", 
                    labels = c("Present", 
                               "Missing")) +
    xlab("Observation") +
    theme(axis.text.y  = element_text(size = 4))
```


# Numerical values imputation

```{r}
#Fence type 

datanew <- data_recipe %>% 
    step_impute_knn(Fireplace.Qu, Lot.Frontage, Fence, neighbors = 6 ) %>%
    prep() %>% 
    bake(new_data = data_train) 

datanew    
```


```{r}
datanew %>% 
    select(Fireplace.Qu, Lot.Frontage, Fence) %>% 
    summary()
```
# Calculating skewness

```{r}

library(summarytools)
summarytools::descr(datanew)

```

```{r}

#Plotting highly skewed variables

datanew %>% 
    ggplot(aes(x= Gr.Liv.Area)) + geom_histogram(fill = "lightblue", colour = "white", bins=30)
```

```{r}

#Plotting highly skewed variables

datanew %>% 
    ggplot(aes(x= Mas.Vnr.Area)) + geom_histogram(fill = "lightblue", colour = "white", bins=30)
```

# Transforming highly skewed variables

```{r}
data_recipe %>% 
    step_YeoJohnson(Mas.Vnr.Area) %>% 
    prep() %>% 
    bake(new_data = data_train) %>% 

    ggplot(mapping = aes(x = Mas.Vnr.Area)) + geom_histogram(fill = '#006EA1', color = 'white', bins = 15) +
  labs(title = 'Total square feet of Basement area after tranformation',
       x = 'Total square Feet',
    )
```


# Transforming categorical variables


```{r}
count(datanew, Roof.Matl)
```

```{r}

#Label encoding

data_recipe %>%
    step_integer(Roof.Matl) %>%
    prep(data_train) %>%
    bake(data_train) %>%
    count(Roof.Matl)
```

